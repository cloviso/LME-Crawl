<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maikegroup.delight.data.repository.data.lmeprice.dao.LmePriceMapper">
  <resultMap id="BaseResultMap" type="com.maikegroup.delight.data.repository.data.lmeprice.model.LmePrice">
    <id column="key" jdbcType="INTEGER" property="key" />
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="priceRange" jdbcType="VARCHAR" property="pricerange" />
    <result column="avgPrice" jdbcType="VARCHAR" property="avgprice" />
    <result column="up2down" jdbcType="VARCHAR" property="up2down" />
    <result column="danwei" jdbcType="VARCHAR" property="danwei" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    key, id, title, date, priceRange, avgPrice, up2down, danwei
  </sql>
  <select id="selectByExample" parameterType="com.maikegroup.delight.data.repository.data.lmeprice.model.LmePriceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from lmeprice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from lmeprice
    where key = #{key,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lmeprice
    where key = #{key,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.maikegroup.delight.data.repository.data.lmeprice.model.LmePriceExample">
    delete from lmeprice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.maikegroup.delight.data.repository.data.lmeprice.model.LmePrice">
    insert into lmeprice (key, id, title, 
      date, priceRange, avgPrice, 
      up2down, danwei)
    values (#{key,jdbcType=INTEGER}, #{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{date,jdbcType=VARCHAR}, #{pricerange,jdbcType=VARCHAR}, #{avgprice,jdbcType=VARCHAR}, 
      #{up2down,jdbcType=VARCHAR}, #{danwei,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.maikegroup.delight.data.repository.data.lmeprice.model.LmePrice">
    insert into lmeprice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="key != null">
        key,
      </if>
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="pricerange != null">
        priceRange,
      </if>
      <if test="avgprice != null">
        avgPrice,
      </if>
      <if test="up2down != null">
        up2down,
      </if>
      <if test="danwei != null">
        danwei,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="key != null">
        #{key,jdbcType=INTEGER},
      </if>
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="pricerange != null">
        #{pricerange,jdbcType=VARCHAR},
      </if>
      <if test="avgprice != null">
        #{avgprice,jdbcType=VARCHAR},
      </if>
      <if test="up2down != null">
        #{up2down,jdbcType=VARCHAR},
      </if>
      <if test="danwei != null">
        #{danwei,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maikegroup.delight.data.repository.data.lmeprice.model.LmePriceExample" resultType="java.lang.Long">
    select count(*) from lmeprice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lmeprice
    <set>
      <if test="record.key != null">
        key = #{record.key,jdbcType=INTEGER},
      </if>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.pricerange != null">
        priceRange = #{record.pricerange,jdbcType=VARCHAR},
      </if>
      <if test="record.avgprice != null">
        avgPrice = #{record.avgprice,jdbcType=VARCHAR},
      </if>
      <if test="record.up2down != null">
        up2down = #{record.up2down,jdbcType=VARCHAR},
      </if>
      <if test="record.danwei != null">
        danwei = #{record.danwei,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lmeprice
    set key = #{record.key,jdbcType=INTEGER},
      id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=VARCHAR},
      priceRange = #{record.pricerange,jdbcType=VARCHAR},
      avgPrice = #{record.avgprice,jdbcType=VARCHAR},
      up2down = #{record.up2down,jdbcType=VARCHAR},
      danwei = #{record.danwei,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maikegroup.delight.data.repository.data.lmeprice.model.LmePrice">
    update lmeprice
    <set>
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="pricerange != null">
        priceRange = #{pricerange,jdbcType=VARCHAR},
      </if>
      <if test="avgprice != null">
        avgPrice = #{avgprice,jdbcType=VARCHAR},
      </if>
      <if test="up2down != null">
        up2down = #{up2down,jdbcType=VARCHAR},
      </if>
      <if test="danwei != null">
        danwei = #{danwei,jdbcType=VARCHAR},
      </if>
    </set>
    where key = #{key,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maikegroup.delight.data.repository.data.lmeprice.model.LmePrice">
    update lmeprice
    set id = #{id,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      date = #{date,jdbcType=VARCHAR},
      priceRange = #{pricerange,jdbcType=VARCHAR},
      avgPrice = #{avgprice,jdbcType=VARCHAR},
      up2down = #{up2down,jdbcType=VARCHAR},
      danwei = #{danwei,jdbcType=VARCHAR}
    where key = #{key,jdbcType=INTEGER}
  </update>
</mapper>